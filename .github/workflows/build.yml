name: build
permissions:
  contents: read

on:
  push:
    branches: [main, dev]
    paths-ignore:
      - 'Docs/**'       # Docs folder in root of repo
      - '**/*.md'       # .md files anywhere in the repo
      - '**/LICENSE'    # LICENSE files anywhere in the repo
      - '**/.gitignore' # .gitignore files anywhere in the repo
      
  pull_request:
    branches: [main]
    paths-ignore:
      - 'Docs/**'       # Docs folder in root of repo
      - '**/*.md'       # .md files anywhere in the repo
      - '**/LICENSE'    # LICENSE files anywhere in the repo
      - '**/.gitignore' # .gitignore files anywhere in the repo
      
  workflow_dispatch:
    
  schedule:
    - cron: '16 9 * * *' # once a day @ 9:16am UTC (2:16am PST)

env:
  SCHEME: "SwiftUIPageView-CI"

jobs:
  macOS:
    name: macOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Build
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "generic/platform=macOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
    # - name: Unit Tests
    #   run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "platform=macOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
  
  macOS-swift6:
    name: macOS (Swift 6)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Set Package to Swift 6.0
      run: swift package tools-version --set "6.0"
    - name: Build
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "generic/platform=macOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
    # - name: Unit Tests
    #   run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "platform=macOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}

  macCatalyst:
    name: macCatalyst
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Build
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "generic/platform=macOS,variant=Mac Catalyst" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
    # - name: Unit Tests
    #   run: xcodebuild test -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "platform=macOS,variant=Mac Catalyst" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}

  iOS:
    name: iOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Bootstrap Platforms
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcrun simctl list
    - name: Download Platform
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcodebuild -downloadPlatform iOS
    - name: Build
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "generic/platform=iOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}

  tvOS:
    name: tvOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Bootstrap Platforms
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcrun simctl list
    - name: Download Platform
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcodebuild -downloadPlatform tvOS
    - name: Build
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "generic/platform=tvOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
      
  watchOS:
    name: watchOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Bootstrap Platforms
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcrun simctl list
    - name: Download Platform
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcodebuild -downloadPlatform watchOS
    - name: Build
      run: xcodebuild build -workspace ".swiftpm/xcode/package.xcworkspace" -scheme "$SCHEME" -destination "generic/platform=watchOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}

  demo-iOS:
    name: Demo Project (iOS)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Bootstrap Platforms
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcrun simctl list
    - name: Download Platform
      # Workaround for Xcode/GitHub runner issues finding simulators.
      # see https://github.com/actions/runner-images/issues/12758#issuecomment-3206748945
      run: xcodebuild -downloadPlatform iOS
    - name: Resolve Package Dependencies # needed because sometimes xcodebuild fails otherwise
      run: xcodebuild -project "Demo/Demo.xcodeproj" -resolvePackageDependencies | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
    - name: Build # by targeting a simulator device, we bypass requiring a Developer Team ID
      run: xcodebuild build -project "Demo/Demo.xcodeproj" -scheme "Demo" -destination "generic/platform=iOS Simulator,name=Any iOS Simulator Device" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}

  demo-macOS:
    name: Demo Project (macOS)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Resolve Package Dependencies # needed because sometimes xcodebuild fails otherwise
      run: xcodebuild -project "Demo/Demo.xcodeproj" -resolvePackageDependencies | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
    - name: Build
      run: xcodebuild build -project "Demo/Demo.xcodeproj" -scheme "Demo" -destination "generic/platform=macOS" | xcbeautify --renderer github-actions && exit ${PIPESTATUS[0]}
